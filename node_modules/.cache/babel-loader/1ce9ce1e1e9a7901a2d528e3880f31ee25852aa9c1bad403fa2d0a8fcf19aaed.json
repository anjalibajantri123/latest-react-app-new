{"ast":null,"code":"import _slicedToArray from\"C:/Users/Mobile Programming/Desktop/my-react-app-latest/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import logo from './logo.svg';\nimport{useState}from'react';import'./App.css';import Home from'./components/Home';import About from'./components/About';import Navbar from'./components/Navbar';import Textform from'./components/Textform';import Alert from'./components/Alert';import{BrowserRouter,Routes,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];// SHOW ALERT \n// need to pass parameters in function showalert function\nvar showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){return setAlert(null);},3000);};var toggleMode=function toggleMode(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#2a676e\";showAlert(\"Dark Mode is Enabled\",\"success\");document.title=\"Text Utilies - Dark Mode\";// setInterval(()=>{\n//   document.title = \"Text Utilies is Amazing Mode\";  \n// },2000);\n// setInterval(()=>{\n//   document.title = \"Install Text Utilies Now\";  \n// },2000);\n}else{setMode(\"light\");document.body.style.backgroundColor=\"#ffffff\";showAlert(\"Light Mode as been Enabled\",\"success\");document.title=\"Text Utilies - Light Mode\";}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Navbar,{mainTitle:\"TextUtils\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"textform\",element:/*#__PURE__*/_jsx(Textform,{taheading:\"Enter the text\",mode:mode,toggleMode:toggleMode,showAlert:showAlert})})]})]})});}export default App;","map":{"version":3,"names":["useState","Home","About","Navbar","Textform","Alert","BrowserRouter","Routes","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","mainTitle","path","element","taheading"],"sources":["C:/Users/Mobile Programming/Desktop/my-react-app-latest/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  // SHOW ALERT \n  // need to pass parameters in function showalert function\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    });\n\n    setTimeout(()=>setAlert(null),3000);\n   \n  } \n\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#2a676e\";\n      showAlert(\"Dark Mode is Enabled\",\"success\");\n      document.title = \"Text Utilies - Dark Mode\";\n      // setInterval(()=>{\n      //   document.title = \"Text Utilies is Amazing Mode\";  \n      // },2000);\n      // setInterval(()=>{\n      //   document.title = \"Install Text Utilies Now\";  \n      // },2000);\n\n    }else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#ffffff\";\n      showAlert(\"Light Mode as been Enabled\",\"success\");\n      document.title = \"Text Utilies - Light Mode\";\n      }  \n    }\n\n  return (\n    <>\n    {/* <Router> */}\n    {/* <Navbar mainTitle = 'TextUtils' homeText= 'Home' aboutText= 'About' /> */}\n      {/* <Navbar mainTitle = 'TextUtils'  mode ={mode} toggleMode={toggleMode} />\n      <Alert alert= {alert} />\n      <div className='container my-3'>\n          <Textform taheading= 'Enter the text' mode ={mode} toggleMode={toggleMode} showAlert={showAlert} />\n          <About/> */}\n           {/* <Routes>\n           <Route exact path=\"/about\" element={<About/>}></Route>\n            <Route exact path=\"/\" element={<Textform taheading= 'Enter the text' mode ={mode} toggleMode={toggleMode} showAlert={showAlert} />}></Route>\n           </Routes> */}\n           \n          \n      {/* </div> */}\n     {/* </Router> */}\n     {/* <Router>\n       <Navbar mainTitle = 'TextUtils'  mode ={mode} toggleMode={toggleMode} />\n       <Alert alert= {alert} />\n        <div className='container my-3'>\n        <Layout>\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>}/>\n            <Route exact path=\"/login\" element={<Login/>}/>\n            <Route exact path=\"/recovery-password\" element={<RecoveryPassword/>}/>\n            <Route path=\"*\" element={<NotFound/>}/>\n          </Routes>\n        </Layout>\n        </div>\n    </Router> */}\n\n   \n      <BrowserRouter>\n      <Navbar mainTitle = 'TextUtils'  mode ={mode} toggleMode={toggleMode} />\n      <Alert alert= {alert} />\n        <Routes>\n              <Route path='/' element={<Home/>}></Route>\n              <Route path='about' element={<About/>}></Route>\n              <Route path='textform' element={<Textform taheading= 'Enter the text' mode ={mode} toggleMode={toggleMode} showAlert={showAlert} />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}