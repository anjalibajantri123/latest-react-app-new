{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mobile Programming\\\\Desktop\\\\my-react-app-latest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  // SHOW ALERT \n  // need to pass parameters in function showalert function\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#2a676e\";\n      showAlert(\"Dark Mode is Enabled\", \"success\");\n      document.title = \"Text Utilies - Dark Mode\";\n      // setInterval(()=>{\n      //   document.title = \"Text Utilies is Amazing Mode\";  \n      // },2000);\n      // setInterval(()=>{\n      //   document.title = \"Install Text Utilies Now\";  \n      // },2000);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#ffffff\";\n      showAlert(\"Light Mode as been Enabled\", \"success\");\n      document.title = \"Text Utilies - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"textform\",\n          element: /*#__PURE__*/_jsxDEV(Textform, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","Textform","Alert","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mobile Programming/Desktop/my-react-app-latest/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  // SHOW ALERT \n  // need to pass parameters in function showalert function\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    });\n\n    setTimeout(()=>setAlert(null),3000);\n   \n  } \n\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#2a676e\";\n      showAlert(\"Dark Mode is Enabled\",\"success\");\n      document.title = \"Text Utilies - Dark Mode\";\n      // setInterval(()=>{\n      //   document.title = \"Text Utilies is Amazing Mode\";  \n      // },2000);\n      // setInterval(()=>{\n      //   document.title = \"Install Text Utilies Now\";  \n      // },2000);\n\n    }else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#ffffff\";\n      showAlert(\"Light Mode as been Enabled\",\"success\");\n      document.title = \"Text Utilies - Light Mode\";\n      }  \n    }\n\n  return (\n    <>\n    {/* <Router> */}\n    {/* <Navbar mainTitle = 'TextUtils' homeText= 'Home' aboutText= 'About' /> */}\n      {/* <Navbar mainTitle = 'TextUtils'  mode ={mode} toggleMode={toggleMode} />\n      <Alert alert= {alert} />\n      <div className='container my-3'>\n          <Textform taheading= 'Enter the text' mode ={mode} toggleMode={toggleMode} showAlert={showAlert} />\n          <About/> */}\n           {/* <Routes>\n           <Route exact path=\"/about\" element={<About/>}></Route>\n            <Route exact path=\"/\" element={<Textform taheading= 'Enter the text' mode ={mode} toggleMode={toggleMode} showAlert={showAlert} />}></Route>\n           </Routes> */}\n           \n          \n      {/* </div> */}\n     {/* </Router> */}\n     {/* <Router>\n       <Navbar mainTitle = 'TextUtils'  mode ={mode} toggleMode={toggleMode} />\n       <Alert alert= {alert} />\n        <div className='container my-3'>\n        <Layout>\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>}/>\n            <Route exact path=\"/login\" element={<Login/>}/>\n            <Route exact path=\"/recovery-password\" element={<RecoveryPassword/>}/>\n            <Route path=\"*\" element={<NotFound/>}/>\n          </Routes>\n        </Layout>\n        </div>\n    </Router> */}\n\n<BrowserRouter>\n  <Routes>\n        <Route path='/' element={<About/>}></Route>\n        <Route path='textform' element={<Textform/>}></Route>\n  </Routes>\n</BrowserRouter>\n    </>\n \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGzE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA,MAAMmB,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAGF,OAAO;MACbC,IAAI,EAAGA;IACT,CAAC,CAAC;IAEFE,UAAU,CAAC,MAAIL,QAAQ,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC;EAErC,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGT,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,sBAAsB,EAAC,SAAS,CAAC;MAC3CM,QAAQ,CAACI,KAAK,GAAG,0BAA0B;MAC3C;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC,MAAI;MACHb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACjDM,QAAQ,CAACI,KAAK,GAAG,2BAA2B;IAC5C;EACF,CAAC;EAEH,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eA+BJpB,OAAA,CAACL,aAAa;MAAAyB,QAAA,eACZpB,OAAA,CAACF,MAAM;QAAAsB,QAAA,gBACDpB,OAAA,CAACH,KAAK;UAACwB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEtB,OAAA,CAACT,KAAK;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3C1B,OAAA,CAACH,KAAK;UAACwB,IAAI,EAAC,UAAU;UAACC,OAAO,eAAEtB,OAAA,CAACP,QAAQ;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBACV,CAAC;AAGP;AAACtB,EAAA,CA9EQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgFZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}